//  API Reference
//
//  kfxErrorInfo.h
//  Utilties
//
//  Created by Mark Day on 7/24/13.
//  Copyright (c) 2012 - 2014 Kofax. Use of this code is with permission pursuant to Kofax license terms.
//
#ifndef kfxKUTErrorInfoIncluded
#define kfxKUTErrorInfoIncluded 1

#import <Foundation/Foundation.h>

#define KMC_GN_BASE                 0x1000
#define KMC_UI_BASE                 0x2000
#define KMC_LO_BASE                 0x3000
#define KMC_CD_BASE                 0x4000
#define KMC_IP_BASE                 0x5000
#define KMC_ED_BASE                 0x6000

// 0x7000 to 0xAFFF open

#define KMC_BC_BASE                 0xB000
#define KMC_CL_BASE                 0xC000

#define KMC_EV_BASE                 0xE000


#define KMC_SUCCESS  0

//! General Errors enum
/**
 This enum defines general errors that are not specific to any single component.
 */
typedef enum kfxErrorGeneral {
    KGN_BASE = KMC_GN_BASE,
    
    KMC_GN_FILE_NOT_FOUND,
    KMC_GN_OUT_OF_MEMORY,
    KMC_GN_UNKNOWN_ERROR,
    KMC_GN_PARAM_NEGATIVE,
    KMC_GN_UNSUPPORTED_OPERATION,
    
    KMC_GN_LAST,
} KFX_ERROR_GENERAL;

//! Engine Data Errors enum
/**
 This enum defines the engine data errors that the image class and the image processing methods return.\n
 These errors are generated by objects associated with the engine data objects.
 */
typedef enum kfxKedErrorEngineData {
	KED_BASE = KMC_ED_BASE,
	KMC_ED_FILEPATH, //  The image object is missing a valid file path. RCA: Set the file path before calling write or read file methods.
    KMC_ED_MIMETYPE, //  The image object has an invalid mimetype setting. RCA: Set a valid mimetype before calling the write image method.
    KMC_ED_NOIMAGE,  //  No image object is specified for writing. RCA: Setup a valid image buffer for use with writing the image.
    KMC_ED_IMAGELEAK,  // The image buffer is not nil, therefore the read operation would create a memory leak. RCA: Be sure to free the memory before reading in a new image.
    KMC_ED_INVALID_COLOR, // The output color depth is not 1,8 or 24,
    KMC_ED_NONEXISTENT_FILE,  // the file does not exist
    KMC_ED_FILE_NOT_DELETABLE,
    KMC_ED_FILE_STILL_REMAINS, // 8
    KMC_ED_MISSING_FILE_EXTENSION,
    KMC_ED_MIMETYPE_MISMATCH,
    KMC_ED_JPEG_BITDEPTH,
    KMC_ED_FILE_EXISTS,
    
    KMC_ED_IMAGE_IS_SCALED, // D          // not ios
    KMC_ED_OBJECT_REP_BITMAP_MISMATCH, // E
    KMC_ED_OBJECT_REP_FILE_MISMATCH,
    
    KMC_ED_ILLEGAL_STATE, // 0x10, 16
    KMC_ED_INVALID_ISO_DATE_TIME_FORMAT,  // not ios
    KMC_ED_INVALID_JPEG_QUALITY_VALUE,
    KMC_ED_BITMAP_WRITE_TO_FILE_FAILED,   // not ios
    
    KMC_ED_INVALID_DPI, // 20
    KMC_ED_ALREADY_CLEAR, // 21
    KMC_ED_ALTERNATE_FILEIO_ENGINE, //22

    KMC_ED_BITMAP_READ_FROM_FILE_FAILED,
    KMC_ED_PNG_FILE_WRITE,
    KMC_ED_NO_MEMORY_FOR_METADATA,
    KMC_ED_FILE_EXTENSION,
    KMC_ED_INVALID_ROTATION,//27
    KMC_ED_INVALID_BITDEPTH,
    KMC_ED_INVALID_TETRAGON_CORNERS,
    
    KMC_ED_IMAGE_COLOR_SPACE, // 30
    KMC_ED_IMAGE_CONTEXT, //31
    KMC_ED_IMAGE_WRITTEN_IS_NOT_BITONAL, //32
    KMC_ED_IMAGE_WRITTEN_IS_NOT_GRAY,
    KMC_ED_INVALID_CROP, // 34

    KMC_ED_IMAGE_INVALID,  //35
    
    KMC_ED_UNRECOGNIZED_MIME_TYPE, // The Mime type of the specified image file path cannot be determined, or is unsupported.
    //Make sure the image file specified is one of the supported Mime types:  TIFF, JPEG, PNG.
    
    KMC_ED_BITMAP_DIMENSIONS_IMMUTABLE, // The bitmap dimensions (width, height) cannot be set because this Image object is already represented by an immutable bitmap.
    //Make sure the Image object representation is either IMAGE_REP_FILE or IMAGE_REP_UNKNOWN before attempting to specify bitmap dimensions.
    
    
    KMC_ED_BITMAP_DIMENSIONS_NO_UPSCALE, // The bitmap dimensions (width, height) cannot be set larger than the original file-based representation of this Image object.
    //Make sure the bitmap dimensions specified are smaller than those of the original file-based image representation.  Only bitmap downscaling is supported.
    
    KMC_ED_IMAGE_FILE_DIMENSIONS_ERROR, // 38: The image file dimensions (width, height) cannot be determined.
    //There was an internal SDK problem attempting to read the image dimensions from the image file path contained in the Image object.
    
    KMC_ED_IMAGE_INVALID_SCALING_FACTOR, // 39: The scaling factor selected for this image object is invalid.
    //    The scaling factor supported for each image object is between 0.1 and 1.0.  A scaling factor of 1.0 means no scaling is performed.
    
    KMC_ED_IMAGE_PERFECTION_PROFILE_EMPTY, // 40: The ImagePerfectionProfile contains no image processing operations.
            //Specify some image processing operations in the ipOperations property or ipOperationsFilePath property of the ImagePerfectionProfile.

    KMC_ED_OBJECT_REP_NOBITMAP, // 41: The current image representation does not include a bitmap.
    //the operation requested requires an image representation which includes a bitmap.  The image representation should be either IMAGE_REP_BITMAP or IMAGE_REP_BOTH
    
    KMC_ED_BUFFER_EXISTS, // 42: The file buffer for writing already exists, and the buffer contents would be lost.
    // Make sure you clear the file buffer before writing with the same bitmap to prevent data loss.
    
    KMC_ED_BUFFER, // 43: The image object is missing a valid file buffer.
    // Write the bitmap to a file buffer before calling the read file from buffer method.
    
    KMC_ED_BUFFER_ALREADY_CLEARED, // 44: The file buffer has already been cleared.
    // This warning indicates you did not need to clear the file buffer when it was already cleared.

    
    KMC_ED_OBJECT_REP_MISMATCH, // 45 new for image write to buffer.
    KMC_ED_ALREADY_BUFFERED,    // 46 new for buffered files.
    KMC_ED_DELETE_BUFFERED_FILE, //47 new for buffered file
    KMC_ED_NO_MEMORY_FOR_BUFFERED_FILE, // 48 for write to buffer.
    KMC_ED_BUFFERED_READ_FAILED,  // 49 new for read from buffer for PNG
    KMC_ED_NO_BUFFERED_IMAGE,        // 50 no buffered image to read from.
    KMC_ED_INVALID_FOR_OBJECT_REP,  // 51
    KMC_ED_NONEXISTENT_LOAD_SETTINGS_FILE, // 52

    
    KMC_ED_LAST
} KFX_ERROR_ENGINE_DATA;

//! UI Control Errors enum
/**
 This enum defines the errors associated with UI controls.
 */
typedef enum kfxErrorUIControls {
    KMC_UI_UNKNOWN = KMC_UI_BASE,
    
    KMC_UI_INVALID_LEVEL_THRESHOLD, // The level threshold for pitch or roll is invalid for the requested operation.
    
    KMC_UI_LAST
} KFX_ERROR_UICONTROLS_ERRORS;

//! Logistics Errors enum
/**
 This enum defines the errors associated with logistics.
 */
typedef enum kfxErrorLogistics {

    KLO_BASE = KMC_LO_BASE,
    KMC_LO_INVALID_SERVER_URL,  // 1
    KMC_LO_SERVER_URL_NOT_SET,  // the URL is nil
    KMC_LO_USERNAME_NOT_SET,    // 3, user name or password found nil on login
    KMC_LO_USER_ALREADY_LOGGED_IN, // 4,
    KMC_LO_USER_NOT_LOGGED_IN_ON_LOGOUT, // 5
    KMC_LO_USER_LOGGING_IN_ON_LOGIN,     // 6
    KMC_LO_USER_ALREADY_LOGGED_OUT,      // 7
    KMC_LO_USER_LOGGING_OUT_ON_LOGOUT,   // 8
    KMC_LO_DEVICE_REG_LICENSING_ERROR, // 9
    KMC_LO_SESSION_STATE_BUSY,             // 10
    KMC_LO_USER_LOGIN_ERROR,               // 11

    KMC_LO_PAGE_NOT_FOUND,                 // 12
    KMC_LO_IMAGE_NOT_FOUND,
    
    KMC_LO_DOMAIN,      // domain string found nil on login
    KMC_LO_EMAIL,       // if not demo server, email is nil on login
    KMC_LO_NOT_REGISTERED, // not registered yet
    KMC_LO_REGISTERING,
    KMC_LO_OVERLAPPED_OPERATIONS,
    KMC_LO_INVALID_SESSION_STATE,       // 19
    KMC_LO_LOGIN_NOT_ALLOWED,           // 20
    KMC_LO_NOT_LOGGED_IN, // 21: KMC_LO_NOT_LOGGED_IN: You are not logged in
    //Use the register and then login methods for normal sequences.
    KMC_LO_USER_LOGOUT_ERROR, // 22: An error occurred attempting to logout from the Server.
        //Check  your network connection, and make sure that you are successfully logged in prior to calling the logout() method.
    
    KMC_LO_TASK_LOCK_ACQUIRE_ERROR, // 23: Attempt to acquire a lock for the task associated with this method failed.
            // Internal unexpected error.  No recommendation.
    
    KMC_LO_NO_OPERATION_TO_CANCEL, // 24: There is no currently running operation to cancel.
            //You can only cancel a running operation.
    
    KMC_LO_OPERATION_NOT_CANCELLABLE, // 25: The currently running operation cannot be cancelled.
            //You can only cancel a running operation that supports cancellation.  Check the developer guide to see what operations are cancellable.
    
    KMC_LO_OPERATION_CANCELLED, // 26: The currently running operation was successfully cancelled.
            //The operation has been cancelled, and the SESSION_STATE has returned to the previous state.
    
    KMC_LO_INVALID_DOCUMENT_TYPE_NAME, // 27: The DocumentType name specified is not valid or not available on the Server.
            //Make sure the DocumentType name specified corresponds to a valid DocumentType on the Server.   Check with your Administrator to confirm the DocumentType requested is still available.
    
    KMC_LO_DOWNLOAD_DOCUMENT_FIELDS_ERROR, // 28: An error occurred attempting to download document fields from the Server.
            // Check  your network connection and ask your Administrator to confirm that document fields for the DocumentType requested are still available.
    
    KMC_LO_SUBMIT_PNG, 	// 29: when you submit a document that has an image represented by a PNG file mimetype.
    KMC_LO_SUBMIT_BITMAP, 	// 30: when someone tries to submit an image of a document when it is a bitmap representation.  The image rep must be FILE or BOTH, and the FILE representation could be FILE_BUFFERED or FILE_STORED.
    
    
    KMC_LO_START_SUBMIT_JOB_ERROR, // 31
      //Msg: KMC_LO_START_SUBMIT_JOB_ERROR:  An error occurred attempting to start a document submission job.
      //Des: Check your network connection and ask your Administrator to confirm that your user credentials are valid.  Make sure that your device is still registered.
    
    KMC_LO_SUBMIT_DOCUMENT_IMAGES_ERROR, // 32:
      // KMC_LO_SUBMIT_DOCUMENT_IMAGES_ERROR:  An error occurred attempting to submit images and fields within a document to the Server.
      //Check your network connection and ask your Administrator to confirm that your user credentials are valid and that your DocumentType is recognized by the Server.
    
    KMC_LO_START_SUBMIT_INVALID_JOB_ID, // 33:
      //KMC_LO_START_SUBMIT_INVALID_JOB_ID:  An invalid or missing job ID was detected while starting a document submission job.
      //Ask your Administrator to confirm that your Server is configured to accept new document submission jobs.
    
    
    KMC_LO_SUBMIT_DOCUMENT_FILEIO_ERROR, //34
      //KMC_LO_SUBMIT_DOCUMENT_FILEIO_ERROR:  While preparing a document for submission, a file I/O error occurred reading an image file in one of the pages.
      // Make sure the image file referenced by the Image object in the Document still exists and your application has appropriate file access permissions.

    KMC_LO_SUBMIT_DOCUMENT_FILE_CLOSE_ERROR, // 35
        // KMC_LO_SUBMIT_DOCUMENT_FILE_CLOSE_ERROR: While preparing a document for submission, a file close error occurred after reading an image file in one of the pages.
        //    Make sure the image file referenced by the Image object in the Document still exists and your application has appropriate file access permissions.
    
    KMC_LO_SUBMIT_DOCUMENT_NO_IMAGE_ERROR, //36
        //    KMC_LO_SUBMIT_DOCUMENT_NO_IMAGE_ERROR: The document to be submitted contains no pages with images.
        //    Make sure each Document  contains at least one page with one image before submitting.
    
    KMC_LO_PAGE_IMAGE_INDEX_INVALID, // 37
        //  KMC_LO_PAGE_IMAGE_INDEX_INVALID: The Image index specified for the current page is invalid.
        //  Make sure the Image index is >= 0 and < the total number of images in this page.
    
    KMC_LO_SUBMIT_DOCUMENT_MIMETYPE_ERROR, // 38
        //  KMC_LO_SUBMIT_DOCUMENT_MIMETYPE_ERROR: The MIME type specified for one or more of the Images in the Document is not supported for submission to the Server.
        //  Use a MIME type supported by the Server for each image in the Document to be submitted.
    KMC_LO_SUBMIT_DOCUMENT_IMAGE_REP_ERROR, // 39
        //  KMC_LO_SUBMIT_DOCUMENT_IMAGE_REP_ERROR: The Image Representation specified for one or more of the Images in the Document is not supported for submission to the Server.
        //  Use an Image Representation supported by the Server for each image in the Document to be submitted.
    
    KMC_LO_SUBMIT_DOCUMENT_IMAGE_FILE_MISSING, //40
        //  KMC_LO_SUBMIT_DOCUMENT_IMAGE_FILE_MISSING: The Image file indicated by the Image object in the Page cannot be found or has been deleted.
        //  When submitting a Document the Image objects in the Pages must reference existing Image files in the storage system.
    
    KMC_LO_OPERATION_CANCEL_ERROR, // 41
        // An error occurred while attempting to cancel the running operation.  The operation has been terminated.
        // Check your network connection and ask your Administrator to confirm that the operation was successfully cancelled.  Some manual clean-up may be necessary if normal cancellation procedures did not complete.
    
    KMC_LO_INVALID_SESSION_STATE_TRANSITION, //42
        // KMC_LO_INVALID_SESSION_STATE_TRANSITION: Attempt to transition from one Session State to a subsequent Session State, where the target State is not reachable from the current State.
        // Internal unexpected error.  No recommendation.
    KMC_LO_REGISTERING_NOT_ALLOWED, // 43
        // KMC_LO_REGISTERING_NOT_ALLOWED: Registering is not allowed from this session state.
        // You should log out and then re-register.

    KMC_LO_LAST
    
} KFX_ERROR_LOGISTICS_ERRORS;

//! Image Processor Errors enum
/**
 This enum defines the errors associated with image processing.
 */
typedef enum kfxErrorImageProcessor {
    IP_BASE = KMC_IP_BASE,
    KMC_IP_NO_PROFILE,
    KMC_IP_NO_REPRESENTATION,
    KMC_IP_CONTEXT,
    KMC_IP_LICENSE_INVALID,
    KMC_IP_LICENSE_EXPIRED,
    KMC_IP_LICENSE_ALREADY_SET,
    KMC_IP_BAD_FILENAME,
    KMC_IP_IMAGE_BUFFERED,
    
    
    
    
    KMC_IP_LAST
    
}KFX_ERROR_IMAGE_PROCESSOR;

//! Image Perfection Errors enum
/**
 This enum defines the errors associated with image perfection algorithms.
 */
typedef enum kfxErrorEv {
    
    KMC_EV_UNKNOWN = KMC_EV_BASE,

    KMC_EV_MEMORY,
    KMC_EV_FILEOPEN,
    KMC_EV_BAD_DPI,
    KMC_EV_BAD_WIDTH_HEIGHT,
    KMC_EV_BAD_LINEWIDTH,
    KMC_EV_BAD_CHANNEL,
    KMC_EV_METADATA_OVERFLOW,
    KMC_EV_FILE_READ_FAILED,
    KMC_EV_IMAGE_PARM,
    KMC_EV_IMAGE_PROCESSING,
    KMC_EV_IMAGE_WRITE_FAILED,
    KMC_EV_UNKNOWN_FILETYPE,
    KMC_EV_NONEXISTANT_IMAGE,
    KMC_EV_BAD_FILE_FORMAT,
    KMC_EV_APPEND_TO_FILE,
    KMC_EV_CANNOT_APPEND,
    KMC_EV_PDF_BAD,
    KMC_EV_APPEND_ENCRYPTED,
    KMC_EV_PDF_TOO_LARGE,
    KMC_EV_SPEED_ACCURACY,
    KMC_EV_NETWORK_READ,
    KMC_EV_FILE_METADATA,
    KMC_EV_INVALID_HANDLE,
    KMC_EV_EXTERNAL_PAGE,
    KMC_EV_MMX_PROCESSING,
    KMC_EV_HISTOGRAM,
    KMC_EV_INVALID_POINTER,
    KMC_EV_PAPER_SIZE,
    KMC_EV_BARCODE_DRIVER,
    KMC_EV_LICENSING,
    KMC_EV_LICENSE_EXPIRED,
    KMC_EV_FILEIO_BUSY,
    KMC_EV_PAGE_BUSY,
    KMC_EV_USER_ABORT,
    
    KMC_EV_LAST
}KFX_ERROR_PERFECTION; 

typedef enum kfxClassifier {
    
    KMC_CL_UNKNOWN = KMC_CL_BASE,
    KMC_CL_CONFIG_NULL,
    KMC_CL_CONFIG_NOT_LOADED,
    KMC_CL_MODEL_NULL,
    KMC_CL_MODEL_NOT_LOADED,
    KMC_CL_LISTENER_NULL, // 5
    KMC_CL_MAX_NUM_RESULTS_INVALID,
    KMC_CL_CLASSIFIER_BUSY,
    KMC_CL_CLASSIFIER_NOT_INITIALIZED,
    KMC_CL_INVALID_IMAGE_SUPPLIED, // 9
    KMC_CL_NO_IMAGE_SUPPLIED, // 10
    
    
    


    KMC_CL_LAST

}KFX_ERROR_CLASSIFIER;

//! An error lookup reference class
/**
 Framework: libKfxUtilities\n
 Import suggestion: #import <kfxLibUtilities/kfxUtilities.h>\n
 
 This class contains class methods to determine the error description and probable cause or solution for the error based on an error code returned by the library. This class also includes enumerations for groups of errors that the libraries can generate.  The groups of errors are assigned a section of hexidecimal errors, such that 0xGxxx G number indicates the group.  See the KMC_XXX_BASE defines for these groups.
 */
@interface kfxError : NSObject

// ==========================================================
//! Find an error message for a given error code
/**
 Use this class method to find an error message for a given error code.  It returns the message string, formatted as follows: Module description: error message.  Module description ends with the substring: "Error:", which is handy for parsing.  The first module description phrase is suitable for a error pop up alert title.  But you can design your own approach as you see fit.
 @param inputErrorCode Supply the error code for which you want an error message describing the error.
 @return A string describing the error.
 */
+ (NSString *) findErrMsg: (int) inputErrorCode;


// ==========================================================
//! Find an error description for a given error code
/**
 Use this class method to find an error description for a given error code, to discover how the error may occur and possible resolution. The method returns a string such that you could create an error pop up.
 @param inputErrorCode Supply the error code for which you want an error description for corrective action if possible.
 @return A string message suggesting what you might do to recover from the error.
 */
+ (NSString *) findErrDesc: (int) inputErrorCode;


@end
#endif
